.container {
  display: flex;
  flex-direction: column;
  margin: 0 auto;
}

button[mat-raised-button] {
  border-radius: 8px;
  background-color: var(--primary-color);
  color: var(--text-color);
  font-size: 1.rem;
  align-self: center;
}

.settings {
  display: flex;
  margin: 0 auto;
  padding: 1rem;

  h2 {
    margin-top: 0;
  }
}

.filter {
  display: flex;
  flex-direction: column;
  padding: 1rem;
}

.log-level {
  display: flex;
  flex-direction: column;
  padding: 1rem;
}

.log-level-row {
  display: flex;
  justify-content: space-between;
  align-items: center;

  p {
    margin-left: 1rem;
  }
}

.source {
  display: flex;
  flex-direction: column;
  padding: 1rem;
}

.source-row {
  display: flex;
  justify-content: space-between;
  align-items: center;

  p {
    margin-left: 1rem;
  }
}

.toggle-label {
  font-size: 1rem;
  margin-left: 0.25rem;
}

.log-display {
  margin-inline: 3rem;
  margin-top: 1rem;
}

.table-header {
  margin-bottom: 1rem;
  display: flex;
  justify-content: flex-start;
}

.mat-mdc-table {
  border: 1px solid var(--text-color);
}

.mat-mdc-row,
.mat-mdc-header-cell {
  font-size: 1.2rem;
}

.mat-mdc-header-cell {
  font-weight: bold;
}

tr:nth-child(even) {
  background-color: var(--background-color);
}

.separator {
  height: auto;
  margin-inline: 1.5rem;
  width: 1px;
  background-color: var(--text-color);
}

.badge {
  display: inline-block;
  border-radius: 6px;
  padding: 0.25rem 0.5rem;
  border: 1px solid #ccc;
  user-select: none;

  &.level {
    background-color: var(--secondary-color);
    color: var(--text-color-secondary);
    display: flex;
    align-items: center;
    justify-content: center;
    height: 24px;
    width: 24px;

    &::before {
      font-family: 'Material Icons';
      font-size: 1.4rem;
      font-weight: bold;
      display: inline-block;
      color: var(--text-color);
      text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.7);
      -webkit-text-stroke: 0.5px rgba(0, 0, 0, 1);
      vertical-align: middle;
    }

    &[data-level='E'] {
      background-color: var(--error-color);

      &::before {
        content: 'error';
      }
    }

    &[data-level='W'] {
      background-color: var(--warning-color);

      &::before {
        content: 'warning';
      }
    }

    &[data-level='I'] {
      background-color: var(--info-color);

      &::before {
        content: 'info';
      }
    }

    &[data-level='V'] {
      background-color: var(--verbose-color);

      &::before {
        content: 'description';
      }
    }
  }

  &.source {
    background-color: var(--secondary-color);
    color: var(--text-color);
  }
}
